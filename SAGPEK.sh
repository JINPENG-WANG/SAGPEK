#!/bin/bash

############################################################################################################################
#############
#				SAGPEK: a command-line software to judge the genotypes of investigated loci in a batch of ABI 
#					files generated by Sanger sequencing
#
#				Version:  v1.0
#
#				About: Developed in the Shandong Academy of Agricultural Sciences, China
#
#				Developers: Jinpeng Wang
#############################################################################################################################
###############

#*********************************************************************************FUNCTION usage*****************************************************************************************
# 							This function prints a help message describing all the KARAJ's command-line options							#	 ##########################################################################################################################################################################################																								
# Function name:																						#
#              usage																						#
# ARGUMENTS: 																							#
# 		None																						#
# OUTPUTS: 																							#
# 		Writes String to STDOUT																			#
# RETURN: 																							#
# 		DESCRIPTION OF FLAGS																				#
#*****************************************************************************************************************************************************************************************  
	
	function usage 
		{
			echo ""
			echo "KARAJ:      a command-line software to judge the genotypes of investigated loci in a batch of ABI files generated by Sanger sequencing"
			echo "Version:    v1.0"
			echo "About:      Developed in the Shandong Academy of Agricultural Sciences, China"
			echo "Developers: Jinpeng Wang, Jinming Huang"
			echo "Code:       https://github.com/JINPENG-WANG/SAGPEK"
			echo "Email:      wangjinpeng0225@163.com and huangjinm@sina.com"
			echo "Citation:"
			echo "Jinpeng Wang, et al, SAGPEK: Fast and accurate identification of genotypes in individualized molecular detection" 
			echo ""
			echo "Instuction: the list of operations and options that are supported by SAGPEK"
			echo ""
			echo "    -t                 type of files: HBV/cattle/PAH/custom, please see exmaples (usage examples -u) or github for further explanation."
			echo "    -g                 custom tag file name. Used with -t custom."
			echo "    -h                 help."
			echo "    -u                 usage examples."
			exit 1
		}
	
#*********************************************************************************FUNCTION Example****************************************************************************************
# 									This function prints 3 SAGPEK commands examples									#	##########################################################################################################################################################################################																								
# Function name:																						#
#              Example																						#
# ARGUMENTS: 																							#
# 		None																						#
# OUTPUTS: 																							#
# 		Writes String to STDOUT																			#
# RETURN: 																							#
# 		Examples of SAGPEK commands																			#
#*****************************************************************************************************************************************************************************************  	
    
     function Example
		{
		 echo "Example of how to use SAGPEK
		 *********************************
		 Example1:
		 Example2:
		 Example3:"
		 exit 1
		}



## specifying the options
while getopts ":t:g:u:h" opt; do
 	 case ${opt} in
		    g)
	          tag_file="$OPTARG"
			  printf "Tag file name is %s \n" $OPTARG
		      ;;
 
		    t)
		      type="$OPTARG"
			  printf "Type is %s\n" $OPTARG
		      ;; 
		      
		    u)
		      Example
		      exit 0
		      ;; 
		      
		    h)
		      usage
		      exit 0
		      ;; 
		      
		    \?)
		      echo "Invalid option, please see the Help using -h option:" >&2
		      exit 0
		      ;;
		      
		    \:) 
		      printf "Argument missing from -%s option\n" $OPTARG 
		      exit 0
		      ;;
   
  	esac
done
shift $((OPTIND -1))

Rscript Src/Script01.get.amPeak.R

perl Src/Script02.get.genotypes.pl $type $tag_file 

